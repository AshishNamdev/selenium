[tox]
envlist = docs, flake8, isort, validate-pyproject

[testenv:validate-pyproject]
skip_install = true
deps =
  validate-pyproject==0.24.1
  packaging==25.0
commands =
  validate-pyproject ./pyproject.toml

[testenv:docs]
skip_install = true
deps =
  -r {toxinidir}/docs/requirements.txt
  -r {toxinidir}/requirements.txt
commands =
  ; regenerate autodoc stub pages
  sphinx-autogen docs/source/api.rst
  ; build api docs
  sphinx-build -b html -d ../build/docs/doctrees docs/source ../build/docs/api/py {posargs}
setenv =
  PYTHONPATH = {toxinidir}/.

[testenv:mypy]
skip_install = true
deps =
  mypy==1.15.0
  lxml==5.3.2
  types-urllib3==1.26.25
  types-certifi==2021.10.8.3
  trio-typing==0.10.0
commands = mypy --install-types {posargs}

[testenv:linting-ci]
; checks linting for CI with stricter exiting when failing and no rewriting
skip_install = true
deps =
  isort==6.0.1
  black==25.1.0
  autoflake==2.3.1
  flake8==7.1.2
  flake8-pyproject==1.2.3
  flake8-typing-imports==1.16.0
  docformatter==1.7.5
commands =
  isort --check-only --diff selenium/ test/ conftest.py
  black --check --diff selenium/ test/ conftest.py
  autoflake --check-diff selenium/ test/ conftest.py
  flake8 selenium/ test/ conftest.py
  docformatter --check --diff selenium/ test/ conftest.py

[testenv:linting]
; A consolidated linting based recipe, responsible for executing linting tools across the code base.
; This encompasses:
;   - isort for imports
;   - black and flake8 for general formatting
;   - autoflake for unused imports and variables
;   - docformatter for docstrings
; IMPORTANT:
;   - isort, black, autoflake, docformatter: will rewrite files
;   - flake8: only alerts to the failures
skip_install = true
deps =
  isort==6.0.1
  black==25.1.0
  autoflake==2.3.1
  flake8==7.1.2
  flake8-pyproject==1.2.3
  flake8-typing-imports==1.16.0
  docformatter==1.7.5
commands =
  isort selenium/ test/ conftest.py
  black selenium/ test/ conftest.py
  autoflake selenium/ test/ conftest.py
  flake8 selenium/ test/ conftest.py
  docformatter selenium/ test/ conftest.py
